// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql" // Vous pouvez changer en "mysql", "sqlite" selon vos besoins
  url      = env("DATABASE_URL")
}

// Exemple de modèles pour votre application UGC
model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  password      String
  role          String    @default("user") // "user" ou "admin"
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  projects      Project[]
  comments      Comment[]
  
  @@map("users")
}

model Project {
  id            String    @id @default(uuid())
  title         String
  description   String?
  videoUrl      String?
  imageUrl      String?
  category      String    // "ugc", "publicitaire", "spot"
  featured      Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  comments      Comment[]
  
  @@map("projects")
}

model Comment {
  id            String    @id @default(uuid())
  content       String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  projectId     String
  project       Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  
  parentId      String?   // Pour les réponses
  parent        Comment?  @relation("CommentReplies", fields: [parentId], references: [id], onDelete: Cascade)
  replies       Comment[] @relation("CommentReplies")
  
  @@map("comments")
}

